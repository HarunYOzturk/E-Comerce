import {Component, OnInit} from '@angular/core';
import {HttpClient} from '@angular/common/http';
import {NgbPaginationConfig} from '@ng-bootstrap/ng-bootstrap'; // Import NgbPaginationConfig
import {Currency, Product, Type} from './product.model';

@Component({
  selector: 'app-root',

  templateUrl: './app.component.html'
})
export class AppComponent implements OnInit {
  title = 'Frontend';
  products: Product[] = [];
  currentPage = 1;
  itemsPerPage = 10;
  totalItems = 0;
  newProduct: Product = {
    id: '', // Don't set the ID as it will be generated by the backend
    name: '',
    description: '',
    type: Type.ELECTRONIC,
    price: 0,
    currency: Currency.DOLLAR

  };
  validTypes: string[] = Object.values(Type);

  constructor(
    private http: HttpClient,
    private paginationConfig: NgbPaginationConfig // Inject NgbPaginationConfig
  ) {
    // Set the default values for pagination
    paginationConfig.pageSize = this.itemsPerPage;
    paginationConfig.boundaryLinks = true;
    paginationConfig.maxSize = 3;
  }

  ngOnInit(): void {

    this.fetchProducts();
  }

  fetchProducts(): void {

    const startIndex = (this.currentPage - 1) * this.itemsPerPage;
    this.http.get<Product[]>('http://localhost:8080/products/getAllProducts', {
      params: {
        start: startIndex.toString(),
        limit: this.itemsPerPage.toString()
      }
    }).subscribe(data => {
      this.products = data;
    });
  }

  onPageChange(pageNumber: number): void {
    this.currentPage = pageNumber;
    this.fetchProducts();
  }

  onAddProduct(): void {
    this.http.post<Product>('http://localhost:8080/products/addProduct', this.newProduct)
      .subscribe(() => {
        // Clear the form and fetch updated product list
        this.newProduct = {
          id: '',
          name: '',
          description: '',
          type: Type.ELECTRONIC,
          price: 0,
          currency: Currency.DOLLAR
        };
        this.fetchProducts();
      });
  }
}
